@page "/users/{role}"
@model GroupPanelAssignment.Pages.UserManagement.UsersModel
@{
    Layout = "~/Pages/Shared/_Layout.cshtml";
    ViewData["Title"] = Model.PageTitle;

    var sessionRoles = HttpContext.Session.Get<List<Role>>(ApplicationConstants.RolesInSession);
}

<div class="row">
    <div class="col-md-12">
        <div class="card">
            <div class="card-header">
                <div class="col-md-6">
                    <h5 class="card-title"> <b><i>"@Model.PageTitle"</i></b> User List</h5>
                </div>
                <div class="col-md-6">
                    <div class="float-right">
                        <a class="btn btn-outline-primary" asp-page="/usermanagement/newuser"><i class="bi bi-person-plus me-1"></i> Add</a>
                        <button class="btn btn-outline-primary" href="#"><i class="bi bi-upload me-1"></i> Bulk Upload</button>
                    </div>
                </div>
            </div>
            <div class="card-body">
                <div class="row pt-4">
                    <form method="post">
                        <div class="row mb-3">
                            <div class="col-md-6">
                                <div class="input-group mb-3">
                                    <span class="input-group-text" id="basic-addon1">Search Text</span>
                                    <input type="text" class="form-control" asp-for="Input.SearchText" placeholder="username/surname/othernames" title="Enter username/surname/othernames" aria-label="Username" aria-describedby="basic-addon1">
                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="input-group mb-3">
                                    <span class="input-group-text" id="basic-addon1">Filter</span>
                                    <select class="form-select" asp-for="Input.Role">
                                        <option value="All" selected="">All</option>
                                        @foreach (var item in sessionRoles)
                                        {
                                            <option value="@item.RoleName">@item.RoleName</option>
                                        }
                                    </select>
                                </div>
                            </div>
                            <div class="col-md-2">
                                <div class="col-sm-10">
                                    <button type="submit" class="btn btn-primary">Apply</button>
                                </div>
                            </div>
                        </div>
                    </form>
                </div>
                <table class="table table-striped table-bordered">
                    <thead>
                        <tr>
                            @*<th scope="col">#</th>*@
                            <th scope="col">Username</th>
                            <th scope="col">Othernames</th>
                            <th scope="col">Surname</th>
                            <th scope="col">Email</th>
                            <th scope="col">Action</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model.Results)
                        {
                        <tr>
                            @*<th scope="row">@item.</th>*@
                            <td>@item.Username</td>
                            <td>@item.FirstName @item.Othernames </td>
                            <td>@item.Surname</td>
                            <td>@item.Email</td>
                            <td>
                                <button class="btn btn-outline-primary" disabled>Details</button>
                            </td>
                        </tr>
                        }
                    </tbody>
                </table>

                @Html.PagedListPager(
                    (IPagedList)Model.Results,
                    page => Url.Action("Index", new { PageNumber = page }),
                    new X.PagedList.Web.Common.PagedListRenderOptions
                    {
                        DisplayItemSliceAndTotal = true,
                        ContainerDivClasses = new[] { "navigation text-center" },
                        LiElementClasses = new[] { "page-item" },
                        PageClasses = new[] { "page-link" }
                    }
                )

            </div>
        </div>
    </div>
</div>

<script src="~/lib/jquery/dist/jquery.js"></script>
<script>
    $(document).ready(function () {
        $('ul.pagination > li.disabled > a').addClass('page-link');
    });
</script>